
# Open

## Apic timer frequency isn't set correctly

What should be a 10 millisecond delay is taking 1 or 2 seconds; the apic timer
is clearly not being calibrated correctly.

## Interrupt driven serial driver on x86

kernel/x86/serial.c is a polling-based serial driver. It would be nice to do
something interrupt driven, especially now that we have a basic preemptive
scheduler.

# Closed

## A way to include headers for portable interfaces that are implemented per-arch.

### Description

Right now the x86 mutex implementation is all in headers, as static inline functions.
This means we can't just have different .c files for each arch, so we need a way to
directy the compiler to include the right file regardless of architecture.

This is probably going to involve refactoring the build system and/or shuffling some
files around.

### Resolution

Instead of simply doing -I $(srcdir), put an include/ directory in each of
the platform directories, as well as port/. portable interfaces with
per-platform implementations can be in ${platform}/include/kernel//arch/*.h,
which gets included as (e.g.):

	#include <kernel/arch/lock.h>

## kernel/x86/text_console.[ch] is not thread-safe

Resolution: put a busy lock around the contents of text_console_write.

The cursor position is in a pair of shared global variables, and there's no
syncronization on them. If multiple threads are using this module, unexpected
results may occur.

In the simple demo where you have two threads using it as stdout, you seem to
get occasional extra spaces/newlines between their output, which makes some
sense.

## Build system does not account for dependencies on headers

Resolution: Use preprocessor's -M to generate .deps.mk files

This hasn't been much of a problem so far, but now that we've put a few
non-trivial things in headers (in particular, kernel/x86/lock.h), this
is going to be a bit more dangerous.

We can use the preprocessor's -M option to generate proper dependencies.
